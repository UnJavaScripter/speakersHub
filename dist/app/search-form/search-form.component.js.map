{"version":3,"file":"search-form.component.js","sourceRoot":"","sources":["search-form.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,qCAAmC,yBACnC,CAAC,CAD2D;AAC5D,6BAA4B,cAAc,CAAC,CAAA;AAS3C;IAOE,6BAAmB,EAAe,EAAS,EAAsB;QAA9C,OAAE,GAAF,EAAE,CAAa;QAAS,OAAE,GAAF,EAAE,CAAoB;QAC/D,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,kCAAI,GAAJ;QAAA,iBA0BC;QAzBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA,CAAC;YACzB,MAAM,CAAA;QACR,CAAC;QAED,IAAM,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE;YACvD,KAAK,EAAE;gBACL,YAAY,EAAE,UAAU;gBACxB,OAAO,EAAE,IAAI,CAAC,eAAe;aAC9B;SAEF,CAAC;aAED,SAAS,CACR,UAAA,IAAI;YACF,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAA,MAAM;gBAC/B,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAA,CAAC;oBACvB,MAAM,CAAC,MAAM,CAAC,OAAO,KAAK,KAAI,CAAC,cAAc,CAAC;gBAChD,CAAC;gBAAA,IAAI,CAAA,CAAC;oBACJ,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;gBACxB,CAAC;YACH,CAAC,CAAC,CAAA;QACJ,CAAC,EACD,UAAA,GAAG,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,EACvB,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAzB,CAAyB,CAChC,CAAA;IACH,CAAC;IA/CH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAC,2BAA2B,EAAE,+BAA+B,CAAC;YACzE,SAAS,EAAE,CAAC,yCAAkB,CAAC;SAChC,CAAC;;2BAAA;IA2CF,0BAAC;AAAD,CAAC,AA1CD,IA0CC;AA1CY,2BAAmB,sBA0C/B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from '../data-service.service'\nimport { AngularFire } from 'angularfire2';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-search-form',\n  templateUrl: 'search-form.component.html',\n  styleUrls: ['search-form.component.css', '../speakers-hub.component.css'],\n  providers: [DataServiceService]\n})\nexport class SearchFormComponent implements OnInit {\n\n  countries: string[];\n  results;\n  selectedCountry: string;\n  slectedSubject: string;\n\n  constructor(public af: AngularFire, public ds: DataServiceService) {\n    this.countries = ds.getCountries();\n  }\n\n  ngOnInit() {\n  }\n\n  find() {\n    if (!this.selectedCountry){\n      return\n    }\n    \n    const queryObservable = this.af.database.list('/users/', {\n      query: {\n        orderByChild: 'location',\n        equalTo: this.selectedCountry,\n      }\n\n    })\n\n    .subscribe(\n      data => {\n        this.results = data.filter(result => {\n          if (this.slectedSubject){\n            return result.subject === this.slectedSubject;\n          }else{\n            return result.subject;\n          }\n        })\n      },\n      err => console.log(err),\n      () => console.log('Completed!')\n    )\n  }\n\n}\n"]}